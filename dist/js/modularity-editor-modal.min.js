!function(t){var o={};function e(i){if(o[i])return o[i].exports;var r=o[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=o,e.d=function(t,o,i){e.o(t,o)||Object.defineProperty(t,o,{enumerable:!0,get:i})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,o){if(1&o&&(t=e(t)),8&o)return t;if(4&o&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&o&&"string"!=typeof t)for(var r in t)e.d(i,r,function(o){return t[o]}.bind(null,r));return i},e.n=function(t){var o=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(o,"a",o),o},e.o=function(t,o){return Object.prototype.hasOwnProperty.call(t,o)},e.p="",e(e.s=0)}([function(t,o){var e;e=jQuery,"add"==parent.Modularity.Editor.Thickbox.postAction&&""==modularity_post_action&&parent.Modularity.Editor.Thickbox.modulePostCreated(modularity_post_id),"edit-inline-saved"==parent.Modularity.Editor.Thickbox.postAction&&parent.location.reload(),"edit"==parent.Modularity.Editor.Thickbox.postAction&&""==modularity_post_action&&jQuery(document).on("click","#publish",(function(t){parent.Modularity.Editor.Thickbox.postAction="add"})),"edit-inline-not-saved"==parent.Modularity.Editor.Thickbox.postAction&&jQuery(document).on("click","#publish",(function(t){parent.Modularity.Editor.Thickbox.postAction="edit-inline-saved"})),"import"==parent.Modularity.Editor.Thickbox.postAction&&(e('.check-column input[type="checkbox"]').remove(),e(".wp-list-table").addClass("modularity-wp-list-table"),e("tbody .check-column").addClass("modularity-import-column").append('<button class="button modularity-import-button" data-modularity-action="import">Import</button>'),e("#posts-filter").append('<input type="hidden" name="is_thickbox" value="true">'),e(document).on("click",'[data-modularity-action="import"]',(function(t){t.preventDefault();var o=e(t.target).closest("tr").attr("id");o=o.split("-")[1];var i=parent.Modularity.Editor.Module.isEditingModule(),r={action:"get_post",id:o};e("body").addClass("modularity-loader-takeover"),e.post(ajaxurl,r,(function(t){var o={post_id:t.ID,title:t.post_title};parent.Modularity.Editor.Module.updateModule(i,o),parent.Modularity.Editor.Autosave.save("form"),parent.Modularity.Prompt.Modal.close()}),"json")}))),"import-widget"==parent.Modularity.Editor.Thickbox.postAction&&(e('.check-column input[type="checkbox"]').remove(),e(".wp-list-table").addClass("modularity-wp-list-table"),e("tbody .check-column").addClass("modularity-import-column").append('<button class="button modularity-import-button" data-modularity-action="import">Import</button>'),e(document).on("click",'[data-modularity-action="import"]',(function(t){t.preventDefault();var o=e(t.target).closest("tr").attr("id");o=o.split("-")[1];var i=parent.Modularity.Helpers.Widget.isEditingWidget(),r={action:"get_post",id:o};e("body").addClass("modularity-loader-takeover"),e.post(ajaxurl,r,(function(t){var o={post_id:t.ID,title:t.post_title};parent.Modularity.Helpers.Widget.updateWidget(i,o),parent.Modularity.Prompt.Modal.close()}),"json")})))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,