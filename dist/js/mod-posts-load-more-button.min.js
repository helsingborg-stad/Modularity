!function(t){var e={};function o(r){if(e[r])return e[r].exports;var n=e[r]={i:r,l:!1,exports:{}};return t[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=t,o.c=e,o.d=function(t,e,r){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)o.d(r,n,function(e){return t[e]}.bind(null,n));return r},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=4)}({4:function(t,e){var o=o||{};o.Posts=o.Posts||{},o.Posts.LoadMoreButton=function(t){function e(){this.init()}return e.prototype.init=function(){t(document).on("click",".js-mod-posts-load-more",function(e){var o=t(e.target).closest(".js-mod-posts-load-more"),r=JSON.parse(window.atob(o.attr("data-mod-posts-load-more")));if(this.attributesExists(["postsPerPage","offset","target","ajaxUrl","nonce","bladeTemplate"],Object.keys(r))){var n=t(r.target)[0];if(void 0===n)throw'Error: Could not find target "'+r.target+'"';this.toggleLoader(o),this.loadMorePosts(o,n,r)}}.bind(this))},e.prototype.toggleLoader=function(t){if(t.hasClass("hidden"))return t.removeClass("hidden"),void this.removeLoader(t);t.addClass("hidden"),t.after('<div class="loading"><div></div><div></div><div></div><div></div></div>')},e.prototype.loadMorePosts=function(e,o,r){var n=r;n.action="mod_posts_load_more",t.ajax({type:"post",url:n.ajaxUrl,data:n,dataType:"html",success:function(n,i){return"success"===i?(t(o).append(JSON.parse(n)),r.postsPerPage>n.length?(this.removeLoader(e),void e.remove()):(this.toggleLoader(e),r.offset=parseInt(r.offset)+parseInt(r.postsPerPage),void e.attr("data-mod-posts-load-more",window.btoa(JSON.stringify(r))))):"nocontent"===i?(this.removeLoader(e),e.after("<p>No more posts to showâ€¦</p>"),void e.remove()):void 0}.bind(this),error:function(t,e,o){console.log(o)}})},e.prototype.removeLoader=function(e){t(e.next()).hasClass("loading")&&e.next().remove()},e.prototype.attributesExists=function(t,e){var o=!0;return t.forEach((function(t){if(!e.includes(t))throw o=!1,'ValidationError: Missing required data-attribute key "'+t+'"'})),o},new e}(jQuery)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,