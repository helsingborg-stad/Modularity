!function(t){var e={};function o(a){if(e[a])return e[a].exports;var l=e[a]={i:a,l:!1,exports:{}};return t[a].call(l.exports,l,l.exports,o),l.l=!0,l.exports}o.m=t,o.c=e,o.d=function(t,e,a){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(o.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var l in t)o.d(a,l,function(e){return t[e]}.bind(null,l));return a},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=13)}({13:function(t,e){jQuery(document).ready((function(t){function e(e){0===t('#modularity-sorted-by select optgroup[label="Post fields"]').length&&t("#modularity-sorted-by select").prepend('<optgroup label="Post fields">').append("</optgroup>"),t("#modularity-latest-meta-key label, #modularity-sorted-by label").prepend('<span class="spinner" style="visibility: visible; float: none; margin: 0 5px 0 0;"></span>'),t.post(ajaxurl,e,(function(e){t('#modularity-sorted-by select option[value^="_metakey_"], #modularity-sorted-by select optgroup[label="Post meta"]').remove(),t("#modularity-latest-meta-key select").empty(),e.meta_keys.length>2&&(t("#modularity-sorted-by select").append('<optgroup label="Post meta">'),t.each(e.meta_keys,(function(o,a){var l=null!=e.sort_curr&&a.meta_key==e.sort_curr.replace("_metakey_","")?"selected":"",n=null!=e.filter_curr&&a.meta_key==e.filter_curr.replace("_metakey_","")?"selected":"";t("#modularity-sorted-by select").append('<option value="_metakey_'+a.meta_key+'" '+l+">"+a.meta_key+"</option>"),t("#modularity-latest-meta-key select").append('<option value="'+a.meta_key+'" '+n+">"+a.meta_key+"</option>")})),t("#modularity-sorted-by select").append("</optgroup>")),t("#modularity-latest-meta-key .spinner, #modularity-sorted-by .spinner").remove()}),"json")}function o(e){t("#modularity-latest-taxonomy select").empty(),t("#modularity-latest-taxonomy .acf-label label").prepend('<span class="spinner" style="visibility: visible; float: none; margin: 0 5px 0 0;"></span>'),t.post(ajaxurl,e,(function(e){0!==e.types.length?(t.each(e.types,(function(o,a){var l=a.name==e.curr?"selected":"";t("#modularity-latest-taxonomy select").append('<option value="'+a.name+'" '+l+">"+a.label+"</option>")})),t("#modularity-latest-taxonomy .acf-label label .spinner").remove(),a({action:"get_taxonomy_values_v2",tax:t("#modularity-latest-taxonomy select").val(),post:modularity_current_post_id})):t("#modularity-latest-taxonomy .acf-label label .spinner").remove()}),"json")}function a(e){t("#modularity-latest-taxonomy-value select").empty(),t("#modularity-latest-taxonomy-value .acf-label label").prepend('<span class="spinner" style="visibility: visible; float: none; margin: 0 5px 0 0;"></span>'),t.post(ajaxurl,e,(function(e){t.each(e.tax,(function(o,a){var l=a.slug==e.curr?"selected":"";t("#modularity-latest-taxonomy-value select").append('<option value="'+a.slug+'" '+l+">"+a.name+"</option>")})),t("#modularity-latest-taxonomy-value .acf-label label .spinner").remove()}),"json")}"mod-posts"===pagenow&&(e({action:"get_sortable_meta_keys_v2",posttype:t("#modularity-latest-post-type select").val(),post:modularity_current_post_id}),t("#modularity-latest-post-type select").on("change",(function(){e({action:"get_sortable_meta_keys_v2",posttype:t(this).val(),post:modularity_current_post_id})})),o({action:"get_taxonomy_types_v2",posttype:t("#modularity-latest-post-type select").val(),post:modularity_current_post_id}),t("#modularity-latest-post-type select").on("change",(function(){o({action:"get_taxonomy_types_v2",posttype:t(this).val(),post:modularity_current_post_id})})),t("#modularity-latest-taxonomy select").on("change",(function(){a({action:"get_taxonomy_values_v2",tax:t(this).val(),post:modularity_current_post_id})})))}))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc291cmNlL3BocC9Nb2R1bGUvUG9zdHMvYXNzZXRzL21vZC1wb3N0cy10YXhvbm9teS5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImpRdWVyeSIsImRvY3VtZW50IiwicmVhZHkiLCIkIiwiZ2V0UG9zdE1ldGEiLCJkYXRhIiwibGVuZ3RoIiwicHJlcGVuZCIsImFwcGVuZCIsInBvc3QiLCJhamF4dXJsIiwicmVzcG9uc2UiLCJyZW1vdmUiLCJlbXB0eSIsIm1ldGFfa2V5cyIsImVhY2giLCJpbmRleCIsIml0ZW0iLCJzb3J0X3NlbGVjdGVkIiwic29ydF9jdXJyIiwibWV0YV9rZXkiLCJyZXBsYWNlIiwiZmlsdGVyX3NlbGVjdGVkIiwiZmlsdGVyX2N1cnIiLCJnZXRUYXhvbm9teVR5cGVzIiwidHlwZXMiLCJpc19zZWxlY3RlZCIsImN1cnIiLCJsYWJlbCIsImdldFRheG9ub215VmFsdWVzIiwidmFsIiwibW9kdWxhcml0eV9jdXJyZW50X3Bvc3RfaWQiLCJ0YXgiLCJzbHVnIiwicGFnZW5vdyIsIm9uIiwidGhpcyJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtBQUtKLEVBQU9ELFFBQVNDLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9ERyxFQUFPRSxHQUFJLEVBR0pGLEVBQU9ELFFBS2ZGLEVBQW9CUSxFQUFJRixFQUd4Qk4sRUFBb0JTLEVBQUlWLEVBR3hCQyxFQUFvQlUsRUFBSSxTQUFTUixFQUFTUyxFQUFNQyxHQUMzQ1osRUFBb0JhLEVBQUVYLEVBQVNTLElBQ2xDRyxPQUFPQyxlQUFlYixFQUFTUyxFQUFNLENBQUVLLFlBQVksRUFBTUMsSUFBS0wsS0FLaEVaLEVBQW9Ca0IsRUFBSSxTQUFTaEIsR0FDWCxvQkFBWGlCLFFBQTBCQSxPQUFPQyxhQUMxQ04sT0FBT0MsZUFBZWIsRUFBU2lCLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RFAsT0FBT0MsZUFBZWIsRUFBUyxhQUFjLENBQUVtQixPQUFPLEtBUXZEckIsRUFBb0JzQixFQUFJLFNBQVNELEVBQU9FLEdBRXZDLEdBRFUsRUFBUEEsSUFBVUYsRUFBUXJCLEVBQW9CcUIsSUFDL0IsRUFBUEUsRUFBVSxPQUFPRixFQUNwQixHQUFXLEVBQVBFLEdBQThCLGlCQUFWRixHQUFzQkEsR0FBU0EsRUFBTUcsV0FBWSxPQUFPSCxFQUNoRixJQUFJSSxFQUFLWCxPQUFPWSxPQUFPLE1BR3ZCLEdBRkExQixFQUFvQmtCLEVBQUVPLEdBQ3RCWCxPQUFPQyxlQUFlVSxFQUFJLFVBQVcsQ0FBRVQsWUFBWSxFQUFNSyxNQUFPQSxJQUN0RCxFQUFQRSxHQUE0QixpQkFBVEYsRUFBbUIsSUFBSSxJQUFJTSxLQUFPTixFQUFPckIsRUFBb0JVLEVBQUVlLEVBQUlFLEVBQUssU0FBU0EsR0FBTyxPQUFPTixFQUFNTSxJQUFRQyxLQUFLLEtBQU1ELElBQzlJLE9BQU9GLEdBSVJ6QixFQUFvQjZCLEVBQUksU0FBUzFCLEdBQ2hDLElBQUlTLEVBQVNULEdBQVVBLEVBQU9xQixXQUM3QixXQUF3QixPQUFPckIsRUFBZ0IsU0FDL0MsV0FBOEIsT0FBT0EsR0FFdEMsT0FEQUgsRUFBb0JVLEVBQUVFLEVBQVEsSUFBS0EsR0FDNUJBLEdBSVJaLEVBQW9CYSxFQUFJLFNBQVNpQixFQUFRQyxHQUFZLE9BQU9qQixPQUFPa0IsVUFBVUMsZUFBZTFCLEtBQUt1QixFQUFRQyxJQUd6Ry9CLEVBQW9Ca0MsRUFBSSxHQUlqQmxDLEVBQW9CQSxFQUFvQm1DLEVBQUksSSxtQkNsRnJEQyxPQUFPQyxVQUFVQyxPQUFNLFNBQVVDLEdBc0I3QixTQUFTQyxFQUFZQyxHQUM4RCxJQUEzRUYsRUFBRSw4REFBOERHLFFBQ2hFSCxFQUFFLGdDQUFnQ0ksUUFBUSxrQ0FBa0NDLE9BQU8sZUFHdkZMLEVBQUUsa0VBQWtFSSxRQUFRLDhGQUU1RUosRUFBRU0sS0FBS0MsUUFBU0wsR0FBTSxTQUFVTSxHQUM1QlIsRUFBRSxxSEFBcUhTLFNBQ3ZIVCxFQUFFLHNDQUFzQ1UsUUFFcENGLEVBQVNHLFVBQVVSLE9BQVMsSUFDNUJILEVBQUUsZ0NBQWdDSyxPQUFPLGdDQUV6Q0wsRUFBRVksS0FBS0osRUFBU0csV0FBVyxTQUFVRSxFQUFPQyxHQUN4QyxJQUFJQyxFQUF1QyxNQUF0QlAsRUFBU1EsV0FBcUJGLEVBQUtHLFVBQVlULEVBQVNRLFVBQVVFLFFBQVEsWUFBYSxJQUFPLFdBQWEsR0FDNUhDLEVBQTJDLE1BQXhCWCxFQUFTWSxhQUF1Qk4sRUFBS0csVUFBWVQsRUFBU1ksWUFBWUYsUUFBUSxZQUFhLElBQU8sV0FBYSxHQUV0SWxCLEVBQUUsZ0NBQWdDSyxPQUFPLDJCQUE2QlMsRUFBS0csU0FBVSxLQUFPRixFQUFnQixJQUFNRCxFQUFLRyxTQUFVLGFBQ2pJakIsRUFBRSxzQ0FBc0NLLE9BQU8sa0JBQW9CUyxFQUFLRyxTQUFXLEtBQU9FLEVBQWtCLElBQU1MLEVBQUtHLFNBQVcsZ0JBR3RJakIsRUFBRSxnQ0FBZ0NLLE9BQU8sZ0JBRzdDTCxFQUFFLHdFQUF3RVMsV0FDM0UsUUFvQlAsU0FBU1ksRUFBaUJuQixHQUN0QkYsRUFBRSxzQ0FBc0NVLFFBQ3hDVixFQUFFLGdEQUFnREksUUFBUSw4RkFFMURKLEVBQUVNLEtBQUtDLFFBQVNMLEdBQU0sU0FBVU0sR0FDRSxJQUExQkEsRUFBU2MsTUFBTW5CLFFBS25CSCxFQUFFWSxLQUFLSixFQUFTYyxPQUFPLFNBQVVULEVBQU9DLEdBQ3BDLElBQUlTLEVBQWVULEVBQUsxQyxNQUFRb0MsRUFBU2dCLEtBQVEsV0FBYSxHQUM5RHhCLEVBQUUsc0NBQXNDSyxPQUFPLGtCQUFvQlMsRUFBSzFDLEtBQU0sS0FBT21ELEVBQWMsSUFBTVQsRUFBS1csTUFBUSxnQkFHMUh6QixFQUFFLHlEQUF5RFMsU0FFM0RpQixFQUFrQixDQUNkLE9BQVUseUJBQ1YsSUFBTzFCLEVBQUUsc0NBQXNDMkIsTUFDL0MsS0FBUUMsOEJBZFI1QixFQUFFLHlEQUF5RFMsV0FnQmhFLFFBY1AsU0FBU2lCLEVBQWtCeEIsR0FDdkJGLEVBQUUsNENBQTRDVSxRQUM5Q1YsRUFBRSxzREFBc0RJLFFBQVEsOEZBRWhFSixFQUFFTSxLQUFLQyxRQUFTTCxHQUFNLFNBQVVNLEdBQzVCUixFQUFFWSxLQUFLSixFQUFTcUIsS0FBSyxTQUFVaEIsRUFBT0MsR0FDbEMsSUFBSVMsRUFBZVQsRUFBS2dCLE1BQVF0QixFQUFTZ0IsS0FBUSxXQUFhLEdBQzlEeEIsRUFBRSw0Q0FBNENLLE9BQU8sa0JBQW9CUyxFQUFLZ0IsS0FBTyxLQUFPUCxFQUFjLElBQU1ULEVBQUsxQyxLQUFPLGdCQUdoSTRCLEVBQUUsK0RBQStEUyxXQUNsRSxRQWxIUyxjQUFac0IsVUFPSjlCLEVBQVksQ0FDUixPQUFVLDRCQUNWLFNBQVlELEVBQUUsdUNBQXVDMkIsTUFDckQsS0FBUUMsNkJBR1o1QixFQUFFLHVDQUF1Q2dDLEdBQUcsVUFBVSxXQUNsRC9CLEVBQVksQ0FDUixPQUFVLDRCQUNWLFNBQVlELEVBQUVpQyxNQUFNTixNQUNwQixLQUFRQyxnQ0FvQ2hCUCxFQUFpQixDQUNiLE9BQVUsd0JBQ1YsU0FBWXJCLEVBQUUsdUNBQXVDMkIsTUFDckQsS0FBUUMsNkJBR1o1QixFQUFFLHVDQUF1Q2dDLEdBQUcsVUFBVSxXQUNsRFgsRUFBaUIsQ0FDYixPQUFVLHdCQUNWLFNBQVlyQixFQUFFaUMsTUFBTU4sTUFDcEIsS0FBUUMsZ0NBZ0NoQjVCLEVBQUUsc0NBQXNDZ0MsR0FBRyxVQUFVLFdBQ2pETixFQUFrQixDQUNkLE9BQVUseUJBQ1YsSUFBTzFCLEVBQUVpQyxNQUFNTixNQUNmLEtBQVFDIiwiZmlsZSI6ImpzL1Bvc3RzL2Fzc2V0cy9tb2QtcG9zdHMtdGF4b25vbXkubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDEzKTtcbiIsImpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCQpIHtcbiAgICBpZiAocGFnZW5vdyAhPT0gJ21vZC1wb3N0cycpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFBvc3R0eXBlIE1ldGEga2V5c1xuICAgICAqL1xuICAgIGdldFBvc3RNZXRhKHtcbiAgICAgICAgJ2FjdGlvbic6ICdnZXRfc29ydGFibGVfbWV0YV9rZXlzX3YyJyxcbiAgICAgICAgJ3Bvc3R0eXBlJzogJCgnI21vZHVsYXJpdHktbGF0ZXN0LXBvc3QtdHlwZSBzZWxlY3QnKS52YWwoKSxcbiAgICAgICAgJ3Bvc3QnOiBtb2R1bGFyaXR5X2N1cnJlbnRfcG9zdF9pZFxuICAgIH0pO1xuXG4gICAgJCgnI21vZHVsYXJpdHktbGF0ZXN0LXBvc3QtdHlwZSBzZWxlY3QnKS5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBnZXRQb3N0TWV0YSh7XG4gICAgICAgICAgICAnYWN0aW9uJzogJ2dldF9zb3J0YWJsZV9tZXRhX2tleXNfdjInLFxuICAgICAgICAgICAgJ3Bvc3R0eXBlJzogJCh0aGlzKS52YWwoKSxcbiAgICAgICAgICAgICdwb3N0JzogbW9kdWxhcml0eV9jdXJyZW50X3Bvc3RfaWRcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBnZXRQb3N0TWV0YShkYXRhKSB7XG4gICAgICAgIGlmICgkKCcjbW9kdWxhcml0eS1zb3J0ZWQtYnkgc2VsZWN0IG9wdGdyb3VwW2xhYmVsPVwiUG9zdCBmaWVsZHNcIl0nKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICQoJyNtb2R1bGFyaXR5LXNvcnRlZC1ieSBzZWxlY3QnKS5wcmVwZW5kKCc8b3B0Z3JvdXAgbGFiZWw9XCJQb3N0IGZpZWxkc1wiPicpLmFwcGVuZCgnPC9vcHRncm91cD4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgICQoJyNtb2R1bGFyaXR5LWxhdGVzdC1tZXRhLWtleSBsYWJlbCwgI21vZHVsYXJpdHktc29ydGVkLWJ5IGxhYmVsJykucHJlcGVuZCgnPHNwYW4gY2xhc3M9XCJzcGlubmVyXCIgc3R5bGU9XCJ2aXNpYmlsaXR5OiB2aXNpYmxlOyBmbG9hdDogbm9uZTsgbWFyZ2luOiAwIDVweCAwIDA7XCI+PC9zcGFuPicpXG5cbiAgICAgICAgJC5wb3N0KGFqYXh1cmwsIGRhdGEsIGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgJCgnI21vZHVsYXJpdHktc29ydGVkLWJ5IHNlbGVjdCBvcHRpb25bdmFsdWVePVwiX21ldGFrZXlfXCJdLCAjbW9kdWxhcml0eS1zb3J0ZWQtYnkgc2VsZWN0IG9wdGdyb3VwW2xhYmVsPVwiUG9zdCBtZXRhXCJdJykucmVtb3ZlKCk7XG4gICAgICAgICAgICAkKCcjbW9kdWxhcml0eS1sYXRlc3QtbWV0YS1rZXkgc2VsZWN0JykuZW1wdHkoKTtcblxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLm1ldGFfa2V5cy5sZW5ndGggPiAyKSB7XG4gICAgICAgICAgICAgICAgJCgnI21vZHVsYXJpdHktc29ydGVkLWJ5IHNlbGVjdCcpLmFwcGVuZCgnPG9wdGdyb3VwIGxhYmVsPVwiUG9zdCBtZXRhXCI+Jyk7XG5cbiAgICAgICAgICAgICAgICAkLmVhY2gocmVzcG9uc2UubWV0YV9rZXlzLCBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNvcnRfc2VsZWN0ZWQgPSAocmVzcG9uc2Uuc29ydF9jdXJyICE9IG51bGwgJiYgaXRlbS5tZXRhX2tleSA9PSByZXNwb25zZS5zb3J0X2N1cnIucmVwbGFjZSgnX21ldGFrZXlfJywgJycpKSA/ICdzZWxlY3RlZCcgOiAnJztcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpbHRlcl9zZWxlY3RlZCA9IChyZXNwb25zZS5maWx0ZXJfY3VyciAhPSBudWxsICYmIGl0ZW0ubWV0YV9rZXkgPT0gcmVzcG9uc2UuZmlsdGVyX2N1cnIucmVwbGFjZSgnX21ldGFrZXlfJywgJycpKSA/ICdzZWxlY3RlZCcgOiAnJztcblxuICAgICAgICAgICAgICAgICAgICAkKCcjbW9kdWxhcml0eS1zb3J0ZWQtYnkgc2VsZWN0JykuYXBwZW5kKCc8b3B0aW9uIHZhbHVlPVwiX21ldGFrZXlfJyArIGl0ZW0ubWV0YV9rZXkgKydcIiAnICsgc29ydF9zZWxlY3RlZCArICc+JyArIGl0ZW0ubWV0YV9rZXkgKyc8L29wdGlvbj4nKTtcbiAgICAgICAgICAgICAgICAgICAgJCgnI21vZHVsYXJpdHktbGF0ZXN0LW1ldGEta2V5IHNlbGVjdCcpLmFwcGVuZCgnPG9wdGlvbiB2YWx1ZT1cIicgKyBpdGVtLm1ldGFfa2V5ICsgJ1wiICcgKyBmaWx0ZXJfc2VsZWN0ZWQgKyAnPicgKyBpdGVtLm1ldGFfa2V5ICsgJzwvb3B0aW9uPicpO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgJCgnI21vZHVsYXJpdHktc29ydGVkLWJ5IHNlbGVjdCcpLmFwcGVuZCgnPC9vcHRncm91cD4nKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJCgnI21vZHVsYXJpdHktbGF0ZXN0LW1ldGEta2V5IC5zcGlubmVyLCAjbW9kdWxhcml0eS1zb3J0ZWQtYnkgLnNwaW5uZXInKS5yZW1vdmUoKTtcbiAgICAgICAgfSwgJ2pzb24nKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUYXhvbm9teSB0eXBlIHVwZGF0ZVxuICAgICAqL1xuICAgIGdldFRheG9ub215VHlwZXMoe1xuICAgICAgICAnYWN0aW9uJzogJ2dldF90YXhvbm9teV90eXBlc192MicsXG4gICAgICAgICdwb3N0dHlwZSc6ICQoJyNtb2R1bGFyaXR5LWxhdGVzdC1wb3N0LXR5cGUgc2VsZWN0JykudmFsKCksXG4gICAgICAgICdwb3N0JzogbW9kdWxhcml0eV9jdXJyZW50X3Bvc3RfaWRcbiAgICB9KTtcblxuICAgICQoJyNtb2R1bGFyaXR5LWxhdGVzdC1wb3N0LXR5cGUgc2VsZWN0Jykub24oJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZ2V0VGF4b25vbXlUeXBlcyh7XG4gICAgICAgICAgICAnYWN0aW9uJzogJ2dldF90YXhvbm9teV90eXBlc192MicsXG4gICAgICAgICAgICAncG9zdHR5cGUnOiAkKHRoaXMpLnZhbCgpLFxuICAgICAgICAgICAgJ3Bvc3QnOiBtb2R1bGFyaXR5X2N1cnJlbnRfcG9zdF9pZFxuICAgICAgICB9KTtcbiAgICB9KTtcblxuICAgIGZ1bmN0aW9uIGdldFRheG9ub215VHlwZXMoZGF0YSkge1xuICAgICAgICAkKCcjbW9kdWxhcml0eS1sYXRlc3QtdGF4b25vbXkgc2VsZWN0JykuZW1wdHkoKTtcbiAgICAgICAgJCgnI21vZHVsYXJpdHktbGF0ZXN0LXRheG9ub215IC5hY2YtbGFiZWwgbGFiZWwnKS5wcmVwZW5kKCc8c3BhbiBjbGFzcz1cInNwaW5uZXJcIiBzdHlsZT1cInZpc2liaWxpdHk6IHZpc2libGU7IGZsb2F0OiBub25lOyBtYXJnaW46IDAgNXB4IDAgMDtcIj48L3NwYW4+Jyk7XG5cbiAgICAgICAgJC5wb3N0KGFqYXh1cmwsIGRhdGEsIGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnR5cGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICQoJyNtb2R1bGFyaXR5LWxhdGVzdC10YXhvbm9teSAuYWNmLWxhYmVsIGxhYmVsIC5zcGlubmVyJykucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAkLmVhY2gocmVzcG9uc2UudHlwZXMsIGZ1bmN0aW9uIChpbmRleCwgaXRlbSkge1xuICAgICAgICAgICAgICAgIHZhciBpc19zZWxlY3RlZCA9IChpdGVtLm5hbWUgPT0gcmVzcG9uc2UuY3VycikgPyAnc2VsZWN0ZWQnIDogJyc7XG4gICAgICAgICAgICAgICAgJCgnI21vZHVsYXJpdHktbGF0ZXN0LXRheG9ub215IHNlbGVjdCcpLmFwcGVuZCgnPG9wdGlvbiB2YWx1ZT1cIicgKyBpdGVtLm5hbWUrICdcIiAnICsgaXNfc2VsZWN0ZWQgKyAnPicgKyBpdGVtLmxhYmVsICsgJzwvb3B0aW9uPicpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICQoJyNtb2R1bGFyaXR5LWxhdGVzdC10YXhvbm9teSAuYWNmLWxhYmVsIGxhYmVsIC5zcGlubmVyJykucmVtb3ZlKCk7XG5cbiAgICAgICAgICAgIGdldFRheG9ub215VmFsdWVzKHtcbiAgICAgICAgICAgICAgICAnYWN0aW9uJzogJ2dldF90YXhvbm9teV92YWx1ZXNfdjInLFxuICAgICAgICAgICAgICAgICd0YXgnOiAkKCcjbW9kdWxhcml0eS1sYXRlc3QtdGF4b25vbXkgc2VsZWN0JykudmFsKCksXG4gICAgICAgICAgICAgICAgJ3Bvc3QnOiBtb2R1bGFyaXR5X2N1cnJlbnRfcG9zdF9pZFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sICdqc29uJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGF4b25vbXkgdmFsdWVzIHVwZGF0ZVxuICAgICAqL1xuICAgICQoJyNtb2R1bGFyaXR5LWxhdGVzdC10YXhvbm9teSBzZWxlY3QnKS5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBnZXRUYXhvbm9teVZhbHVlcyh7XG4gICAgICAgICAgICAnYWN0aW9uJzogJ2dldF90YXhvbm9teV92YWx1ZXNfdjInLFxuICAgICAgICAgICAgJ3RheCc6ICQodGhpcykudmFsKCksXG4gICAgICAgICAgICAncG9zdCc6IG1vZHVsYXJpdHlfY3VycmVudF9wb3N0X2lkXG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZnVuY3Rpb24gZ2V0VGF4b25vbXlWYWx1ZXMoZGF0YSkge1xuICAgICAgICAkKCcjbW9kdWxhcml0eS1sYXRlc3QtdGF4b25vbXktdmFsdWUgc2VsZWN0JykuZW1wdHkoKTtcbiAgICAgICAgJCgnI21vZHVsYXJpdHktbGF0ZXN0LXRheG9ub215LXZhbHVlIC5hY2YtbGFiZWwgbGFiZWwnKS5wcmVwZW5kKCc8c3BhbiBjbGFzcz1cInNwaW5uZXJcIiBzdHlsZT1cInZpc2liaWxpdHk6IHZpc2libGU7IGZsb2F0OiBub25lOyBtYXJnaW46IDAgNXB4IDAgMDtcIj48L3NwYW4+Jyk7XG5cbiAgICAgICAgJC5wb3N0KGFqYXh1cmwsIGRhdGEsIGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgJC5lYWNoKHJlc3BvbnNlLnRheCwgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XG4gICAgICAgICAgICAgICAgdmFyIGlzX3NlbGVjdGVkID0gKGl0ZW0uc2x1ZyA9PSByZXNwb25zZS5jdXJyKSA/ICdzZWxlY3RlZCcgOiAnJztcbiAgICAgICAgICAgICAgICAkKCcjbW9kdWxhcml0eS1sYXRlc3QtdGF4b25vbXktdmFsdWUgc2VsZWN0JykuYXBwZW5kKCc8b3B0aW9uIHZhbHVlPVwiJyArIGl0ZW0uc2x1ZyArICdcIiAnICsgaXNfc2VsZWN0ZWQgKyAnPicgKyBpdGVtLm5hbWUgKyAnPC9vcHRpb24+Jyk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgJCgnI21vZHVsYXJpdHktbGF0ZXN0LXRheG9ub215LXZhbHVlIC5hY2YtbGFiZWwgbGFiZWwgLnNwaW5uZXInKS5yZW1vdmUoKTtcbiAgICAgICAgfSwgJ2pzb24nKTtcbiAgICB9XG5cbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==